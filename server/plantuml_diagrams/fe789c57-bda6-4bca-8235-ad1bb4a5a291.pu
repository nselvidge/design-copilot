@startuml

class Article {
  - id: integer
  - title: string
  - body: text
  - slug: string
  - created_at: datetime
  - updated_at: datetime
  - user_id: integer
  + belongs_to(user)
  + has_many(favorites)
  + has_many(comments)
  + has_many(articles)
  + authored_by(user_id)
  + favorited_by(user_id)
}
note right of Article
The Article model represents a blog post authored by a User, which can have comments and favorites, features certain field validations, generates a unique slug, and supports tagging and user-specific queries.
Supported, by 'acts-as-taggable-on' gem
end note

class Comment {
  - id: integer
  - body: text
  - user_id: integer
  - article_id: integer
  - created_at: datetime
  - updated_at: datetime
  + belongs_to(user)
  + belongs_to(article)
}
note right of Comment
The Comment model represents a comment made by a User on an Article. It belongs to a User and an Article, and validates the presence of the body attribute.
end note

class Favorite {
  - id: integer
  - user_id: integer
  - article_id: integer
  - created_at: datetime
  - updated_at: datetime
  + belongs_to(user)
  + belongs_to(article)
}
note right of Favorite
The Favorite model represents a user's favorite article. It belongs to a user and an article, and supports a counter cache for the article association.
end note

class Follow {
  - id: integer
  - followable_id: integer
  - followable_type: string
  - follower_id: integer
  - follower_type: string
  - created_at: datetime
  - updated_at: datetime
  - blocked: boolean
  + belongs_to(followable)
  + belongs_to(follower)
}
note right of Follow
The Follow model represents a record of a user following another user or a followable object. It extends the ActsAsFollower::FollowerLib and ActsAsFollower::FollowScopes modules to provide additional functionality.
end note

class User {
  - id: integer
  - email: string
  - encrypted_password: string
  - reset_password_token: string
  - reset_password_sent_at: datetime
  - remember_created_at: datetime
  - created_at: datetime
  - updated_at: datetime
  - username: string
  + has_many(articles)
  + has_many(favorites)
  + has_many(comments)
}
note right of User
The User model represents a registered user of the application. It includes default devise modules for authentication and provides associations with articles, favorites, and comments. The model also includes additional features like acts_as_follower and acts_as_followable.
end note

@enduml