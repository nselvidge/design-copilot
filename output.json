{
    "Article": {
        "description": "The Article model represents a blog post authored by a User, which can have comments and favorites, features certain field validations, generates a unique slug, and supports tagging and user-specific queries.",
        "attributes": {
            "id": "integer",
            "title": "string",
            "body": "text",
            "slug": "string",
            "created_at": "datetime",
            "updated_at": "datetime",
            "user_id": "integer"
        },
        "associations": {
            "belongs_to": [
                "User"
            ],
            "has_many": [
                "Favorite",
                "Comment",
                "Article"
            ]
        },
        "scopes": {
            "authored_by": "Returns all articles authored by a particular user",
            "favorited_by": "Returns all articles favorited by a particular user"
        },
        "tags": "Supported, by 'acts-as-taggable-on' gem"
    },
    "Comment": {
        "description": "The Comment model represents a comment made by a User on an Article. It belongs to a User and an Article, and validates the presence of the body attribute.",
        "attributes": {
            "id": "integer",
            "body": "text",
            "user_id": "integer",
            "article_id": "integer",
            "created_at": "datetime",
            "updated_at": "datetime"
        },
        "associations": {
            "belongs_to": [
                "User",
                "Article"
            ]
        },
        "scopes": {},
        "tags": []
    },
    "Favorite": {
        "description": "The Favorite model represents a user's favorite article. It belongs to a user and an article, and it includes a counter cache for the article association.",
        "attributes": {
            "id": "integer",
            "user_id": "integer",
            "article_id": "integer",
            "created_at": "datetime",
            "updated_at": "datetime"
        },
        "associations": {
            "belongs_to": [
                "User",
                "Article"
            ]
        },
        "additional_features": {
            "counter_cache": true
        }
    },
    "Follow": {
        "description": "The Follow model represents a relationship between a followable object and a follower object. It extends the ActsAsFollower::FollowerLib and ActsAsFollower::FollowScopes modules to provide additional functionality.",
        "attributes": {
            "id": "integer",
            "followable_id": "integer",
            "followable_type": "string",
            "follower_id": "integer",
            "follower_type": "string",
            "blocked": "boolean",
            "created_at": "datetime",
            "updated_at": "datetime"
        },
        "associations": {
            "belongs_to": [
                "followable",
                "follower"
            ]
        },
        "scopes": {},
        "tags": []
    },
    "User": {
        "description": "The User model represents a registered user in the system. It includes authentication functionality provided by the Devise gem. Users can have multiple articles, favorites, and comments. They can also follow and be followed by other users. The model has validations for the username field and includes methods for generating a JWT token, favoriting/unfavoriting articles, and checking if an article is favorited.",
        "attributes": {
            "id": "integer",
            "email": "string",
            "encrypted_password": "string",
            "reset_password_token": "string",
            "reset_password_sent_at": "datetime",
            "remember_created_at": "datetime",
            "created_at": "datetime",
            "updated_at": "datetime",
            "username": "string"
        },
        "associations": {
            "has_many": [
                "Article",
                "Favorite",
                "Comment"
            ],
            "acts_as_follower": [],
            "acts_as_followable": []
        },
        "scopes": {},
        "tags": []
    }
}